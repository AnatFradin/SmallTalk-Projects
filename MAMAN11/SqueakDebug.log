MessageNotUnderstood: UndefinedObject>>nextChunkText17 March 2019 8:39:15.44 pmVM: Win32 - SmalltalkImage: Squeak5.2 [latest update: #18229]SecurityManager state:Restricted: falseFileAccess: trueSocketAccess: trueWorking Dir C:\Private\Open University\Object Oriented\Squeak\Squeak5.2\Squeak5.2\Workspace\MAMAN11Trusted Dir C:\Private\Open University\Object Oriented\Squeak\Squeak5.2\Squeak5.2\Workspace\MAMAN11\anat-fUntrusted Dir C:\Users\anat-f\Documents\My SqueakUndefinedObject(Object)>>doesNotUnderstand: #nextChunkText	Receiver: nil	Arguments and temporary variables: 		aMessage: 	nextChunkText		exception: 	MessageNotUnderstood: UndefinedObject>>nextChunkText		resumeValue: 	nil	Receiver's instance variables: nil[] in FileBasedHelpTopic>>contents	Receiver: a FileBasedHelpTopic<4.5>	Arguments and temporary variables: 	Receiver's instance variables: 		dependents: 	nil		contents: 	nil		fileEntry: 	a DirectoryEntryFile 4.5		sortBlock: 	[closure] in SqueakReleaseNotes class>>asHelpTopicBlockClosure>>on:do:	Receiver: [closure] in FileBasedHelpTopic>>contents	Arguments and temporary variables: 		exceptionOrExceptionSet: 	InvalidUTF8		handlerAction: 	[closure] in FileBasedHelpTopic>>contents		handlerActive: 	true	Receiver's instance variables: 		outerContext: 	FileBasedHelpTopic>>contents		startpc: 	148		numArgs: 	0FileBasedHelpTopic>>contents	Receiver: a FileBasedHelpTopic<4.5>	Arguments and temporary variables: 	Receiver's instance variables: 		dependents: 	nil		contents: 	nil		fileEntry: 	a DirectoryEntryFile 4.5		sortBlock: 	[closure] in SqueakReleaseNotes class>>asHelpTopicSearchTopic>>find:in:results:	Receiver: a SearchTopic<'force'>	Arguments and temporary variables: 		term: 	'force'		path: 	{a DirectoryBasedHelpTopic<Release Notes> . a FileBasedHelpTopic<4.5>}		results: 	an OrderedCollection()		resultTemplate: 	#(nil nil nil nil nil nil)		c: 	nil		topic: 	a FileBasedHelpTopic<4.5>	Receiver's instance variables: 		dependents: 	a DependentsArray(a HelpTopicListItemWrapper('force') a HelpBrowser...etc...		term: 	'force'		process: 	a Process in nil		results: 	an OrderedCollection(a HelpTopic<Welcome>->an OrderedCollection() a HelpTopic...etc...		resultText: 	a Text for ''		topicsToSearch: 	an OrderedCollection(a HelpTopic<Welcome> a HelpTopic<Squeak Us...etc...		mutex: 	a Mutex()		updatePending: 	nil[] in SearchTopic>>find:in:results:	Receiver: a SearchTopic<'force'>	Arguments and temporary variables: <<error during printing>	Receiver's instance variables: 		dependents: 	a DependentsArray(a HelpTopicListItemWrapper('force') a HelpBrowser...etc...		term: 	'force'		process: 	a Process in nil		results: 	an OrderedCollection(a HelpTopic<Welcome>->an OrderedCollection() a HelpTopic...etc...		resultText: 	a Text for ''		topicsToSearch: 	an OrderedCollection(a HelpTopic<Welcome> a HelpTopic<Squeak Us...etc...		mutex: 	a Mutex()		updatePending: 	nilArray(SequenceableCollection)>>do:	Receiver: {a FileBasedHelpTopic<4.5> . a FileBasedHelpTopic<4.6> . a FileBasedHelpTopic<5.0> . a FileBasedHelpTopic...etc...	Arguments and temporary variables: 		aBlock: 	[closure] in SearchTopic>>find:in:results:		index: 	1		indexLimiT: 	5	Receiver's instance variables: {a FileBasedHelpTopic<4.5> . a FileBasedHelpTopic<4.6> . a FileBasedHelpTopic<5.0> . a FileBasedHelpTopic...etc...SearchTopic>>find:in:results:	Receiver: a SearchTopic<'force'>	Arguments and temporary variables: 		term: 	'force'		path: 	{a DirectoryBasedHelpTopic<Release Notes>}		results: 	an OrderedCollection()		resultTemplate: 	#(nil nil nil nil nil nil)		c: 	'This is a directory-based help topic. It''s contents are in C:\Private\Open...etc...		topic: 	a DirectoryBasedHelpTopic<Release Notes>	Receiver's instance variables: 		dependents: 	a DependentsArray(a HelpTopicListItemWrapper('force') a HelpBrowser...etc...		term: 	'force'		process: 	a Process in nil		results: 	an OrderedCollection(a HelpTopic<Welcome>->an OrderedCollection() a HelpTopic...etc...		resultText: 	a Text for ''		topicsToSearch: 	an OrderedCollection(a HelpTopic<Welcome> a HelpTopic<Squeak Us...etc...		mutex: 	a Mutex()		updatePending: 	nil[] in [] in SearchTopic>>startSearch	Receiver: a SearchTopic<'force'>	Arguments and temporary variables: 		topic: 	a DirectoryBasedHelpTopic<Release Notes>		nestedResults: 	an OrderedCollection()	Receiver's instance variables: 		dependents: 	a DependentsArray(a HelpTopicListItemWrapper('force') a HelpBrowser...etc...		term: 	'force'		process: 	a Process in nil		results: 	an OrderedCollection(a HelpTopic<Welcome>->an OrderedCollection() a HelpTopic...etc...		resultText: 	a Text for ''		topicsToSearch: 	an OrderedCollection(a HelpTopic<Welcome> a HelpTopic<Squeak Us...etc...		mutex: 	a Mutex()		updatePending: 	nilOrderedCollection>>do:	Receiver: an OrderedCollection(a HelpTopic<Welcome> a HelpTopic<Squeak User Interface> a HelpTopic<W...etc...	Arguments and temporary variables: 		aBlock: 	[closure] in [] in SearchTopic>>startSearch		index: 	5	Receiver's instance variables: 		array: 	{a HelpTopic<Welcome> . a HelpTopic<Squeak User Interface> . a HelpTopic...etc...		firstIndex: 	1		lastIndex: 	5[] in SearchTopic>>startSearch	Receiver: a SearchTopic<'force'>	Arguments and temporary variables: 	Receiver's instance variables: 		dependents: 	a DependentsArray(a HelpTopicListItemWrapper('force') a HelpBrowser...etc...		term: 	'force'		process: 	a Process in nil		results: 	an OrderedCollection(a HelpTopic<Welcome>->an OrderedCollection() a HelpTopic...etc...		resultText: 	a Text for ''		topicsToSearch: 	an OrderedCollection(a HelpTopic<Welcome> a HelpTopic<Squeak Us...etc...		mutex: 	a Mutex()		updatePending: 	nil[] in BlockClosure>>newProcess	Receiver: [closure] in SearchTopic>>startSearch	Arguments and temporary variables: 	Receiver's instance variables: 		outerContext: 	SearchTopic>>startSearch		startpc: 	192		numArgs: 	0--- The full stack ---UndefinedObject(Object)>>doesNotUnderstand: #nextChunkText[] in FileBasedHelpTopic>>contentsBlockClosure>>on:do:FileBasedHelpTopic>>contentsSearchTopic>>find:in:results:[] in SearchTopic>>find:in:results:Array(SequenceableCollection)>>do:SearchTopic>>find:in:results:[] in [] in SearchTopic>>startSearchOrderedCollection>>do:[] in SearchTopic>>startSearch[] in BlockClosure>>newProcess