TestCase subclass: #EmployeeTest	instanceVariableNames: 'e1 e2 e3 db'	classVariableNames: ''	poolDictionaries: ''	category: 'EmployeeTest-Example'!!EmployeeTest methodsFor: 'as yet unclassified' stamp: 'AF 3/19/2019 18:21'!setUp   db := EmployeeDataBase new.   e1 := Employee new.   e1                    	 name: 'George Blogswell'; 	empNum: 1021;                 salary: 2000;            	 addSkill: 'Smalltalk';    	addSkill: 'C++';         	addSkill: 'C++';         	 addSkill: 'Fortran'.   e2 := Employee new.   e2                        name: 'Jane Lee';         empNum: 1054;             salary: 2250;             addSkill: 'Smalltalk';    addSkill: 'Lisp';         addSkill: 'C++'.  e3 := Employee new.  e3                        name: 'Mike Mendez';      empNum: 1088;             salary: 1950;             addSkill: 'Cobol'.	! !!EmployeeTest methodsFor: 'as yet unclassified' stamp: 'AF 3/19/2019 17:59'!testAdd	db add: e1.	db add: e2.	db add: e3.	"self assert: ((db findSkill: 'C++') size =  2)"	self assert: (db findSkill: 'C++') size equals: 2 description: 'Skills number is wrong!!'.	self assert: (e1 hasSkill: 'C++') description: 'Skills number is wrong!!'.	self assert: (db count) equals: 3 description: 'Number of employees is wrong'.! !!EmployeeTest methodsFor: 'as yet unclassified' stamp: 'AF 3/19/2019 18:26'!testHourlyMonthly |e4 e5|       	e4:= MonthlyEmployee new. 	e5 := HourlyEmployee new.	"Test e4which was created as Monthly employee"	self assert: (e4 isMonthly)  equals: true description: 'This employee must be Monthly !!'.	self assert: (e4 isHourly)  equals: false description: 'This employee must NOT be Hourly !!'.	"Test e5 which was created as Monthly employee"	self assert: (e5 isMonthly)  equals: false description: 'This employee must NOT be Monthly !!'.	self assert: (e5  isHourly)  equals: true description: 'This employee must not  Hourly !!'.! !